<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="

    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-2.5.xsd ">

    <!--定义可以通过注解的形式扫描包-->
    <context:component-scan base-package="com.basic.dubbo.dependency"/>

    <!--提供方应用信息，用于计算依赖关系-->
    <dubbo:application name="sample-provider"/>

    <!--使用zookeeper注册中心暴露服务方地址-->
    <dubbo:registry address="zookeeper://ubuntu1:2181?backup=ubuntu2:2181,ubuntu4:2181"/>

    <!--使用dubbo协议在20880端口暴露服务-->
    <dubbo:protocol name="dubbo" port="20890"/>

    <!--配置dubbo线程模型-->
    <!--<dubbo:protocol name="dubbo" port="20890" dispatcher="all" threadpool="fixed" threads="10" />-->

    <!--注意这里，我们在使用DependenceService的时候，这个服务可能依赖于某一个服务，比如说SampleService  生成远程服务代理，可以像使用本地bean一样使用demoService 检查级联依赖关系，默认为true 当有依赖的时候，需要根据需求进行设置 -->
    <dubbo:reference id="sampleService" interface="com.basic.dubbo.direct.provider.SampleService" check="true"/>

    <!--声明需要暴露的服务接口 写操作可以设置retries=0 避免重复调用SOA服务 retries重试次数-->
    <dubbo:service interface="com.basic.dubbo.dependency.provider.DependencyService" ref="dependencyService" retries="0"/>

    <!-- 加载配置文件，支持注解的方法 -->
    <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <array>
            </array>
        </property>
    </bean>

    <!-- 加载配置文件，支持xml的方式-->
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <!--<value>classpath:conn.properties</value>-->
            </array>
        </property>
    </bean>

</beans>
